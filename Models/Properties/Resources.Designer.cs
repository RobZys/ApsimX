//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Models.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;Barley&quot;,
        ///  &quot;IsEnding&quot;: false,
        ///  &quot;DaysAfterEnding&quot;: 0,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;Barley&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.PMF.OrganArbitrator, Models&quot;,
        ///      &quot;Name&quot;: &quot;Arbitrator&quot;,
        ///      &quot;Children&quot;: [
        ///        {
        ///          &quot;$type&quot;: &quot;Models.PMF.RelativeAllocation, Models&quot;,
        ///          &quot;Name&quot;: &quot;NArbitrator&quot;,
        ///          &quot;Children&quot;: [],
        ///          &quot;IncludeInDocumentation&quot;: false,
        ///          &quot;Enabled&quot;: true,
        ///          &quot;ReadOnl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Barley {
            get {
                return ResourceManager.GetString("Barley", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;Chicory&quot;,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;Chicory&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Memo, Models&quot;,
        ///      &quot;Text&quot;: &quot;\n# Presentation\n\nThis model has been developed to simulate the growth of a forage chicory crop.  The chicory model focus, thus, on describing primarily the vegetative growth, with a simplified account of the reproductive phase, without explicit considering flowers and seeds (these may be included in future release [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Chicory {
            get {
                return ResourceManager.GetString("Chicory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;Eucalyptus&quot;,
        ///  &quot;ResourceName&quot;: &quot;Eucalyptus&quot;,
        ///  &quot;Name&quot;: &quot;Eucalyptus&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Memo, Models&quot;,
        ///      &quot;Text&quot;: &quot;Root:shoot ratio, and allometric relationships for height (Ht, m), stem diameter (DBH, cm, over bark at 1.3 m height), and their derivatives (stem volume Vol, and mean annual increment MAI) were developed as a function of above-ground biomass from [almeida2003application], [almeida2004parameterisation], [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Eucalyptus {
            get {
                return ResourceManager.GetString("Eucalyptus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;Maize&quot;,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;Maize&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.PMF.OrganArbitrator, Models&quot;,
        ///      &quot;Name&quot;: &quot;Arbitrator&quot;,
        ///      &quot;Children&quot;: [
        ///        {
        ///          &quot;$type&quot;: &quot;Models.PMF.RelativeAllocation, Models&quot;,
        ///          &quot;Name&quot;: &quot;NArbitrator&quot;,
        ///          &quot;Children&quot;: [],
        ///          &quot;IncludeInDocumentation&quot;: true,
        ///          &quot;Enabled&quot;: true,
        ///          &quot;ReadOnly&quot;: false
        ///        },
        ///        {
        ///          &quot;$type [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Maize {
            get {
                return ResourceManager.GetString("Maize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.Soils.Nutrients.Nutrient, Models&quot;,
        ///  &quot;DirectedGraphInfo&quot;: {
        ///	&quot;$type&quot;: &quot;Models.Graph.DirectedGraph, Models&quot;,
        ///	&quot;Nodes&quot;: [
        ///	  {
        ///		&quot;$type&quot;: &quot;Models.Graph.Node, Models&quot;,
        ///		&quot;Name&quot;: &quot;Inert&quot;,
        ///		&quot;Location&quot;: &quot;50, 50&quot;,
        ///		&quot;Colour&quot;: &quot;LightGreen&quot;,
        ///		&quot;OutlineColour&quot;: &quot;Black&quot;
        ///	  },
        ///	  {
        ///		&quot;$type&quot;: &quot;Models.Graph.Node, Models&quot;,
        ///		&quot;Name&quot;: &quot;SurfaceResidue&quot;,
        ///		&quot;Location&quot;: &quot;200, 50&quot;,
        ///		&quot;Colour&quot;: &quot;LightGreen&quot;,
        ///		&quot;OutlineColour&quot;: &quot;Black&quot;
        ///	  },
        ///	  {
        ///		&quot;$type&quot;: &quot;Models.Graph.Node, Models&quot;,
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Nutrient {
            get {
                return ResourceManager.GetString("Nutrient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;Wheat&quot;,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;Oats&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Memo, Models&quot;,
        ///      &quot;Text&quot;: &quot;\n# The APSIM Oats Model\n \n_Allan Peake, Hamish Brown, Rob Zyskowski, Edmar I. Teixeira, Neil Huth_\n\nThe APSIM oats model has been developed using the Plant Modelling Framework (PMF) of [brown_plant_2014]. This new framework provides a library of plant organ and process submodels that can be coupled, at runtime, to co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Oats {
            get {
                return ResourceManager.GetString("Oats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.OilPalm.OilPalm, Models&quot;,
        ///  &quot;interception&quot;: 0.0,
        ///  &quot;UnderstoryCoverMax&quot;: 0.4,
        ///  &quot;UnderstoryLegumeFraction&quot;: 1.0,
        ///  &quot;InterceptionFraction&quot;: 0.0,
        ///  &quot;MaximumRootDepth&quot;: 5000.0,
        ///  &quot;RootDepth&quot;: 0.0,
        ///  &quot;DltDM&quot;: 0.0,
        ///  &quot;ReproductiveGrowthFraction&quot;: 0.0,
        ///  &quot;UnderstoryCoverGreen&quot;: 0.0,
        ///  &quot;UnderstoryPotNUptake&quot;: null,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;OilPalm&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Memo, Models&quot;,
        ///      &quot;Text&quot;: &quot;The base configuration of the oil palm m [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OilPalm {
            get {
                return ResourceManager.GetString("OilPalm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;Plantain&quot;,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;Plantain&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Memo, Models&quot;,
        ///      &quot;Text&quot;: &quot;\n## Presentation\n\nThis model has been built using the Plant Modelling Framework (PMF) of [brown_plant_2014] to simulate the growth of a forage plantain crop ( _Plantago lanceolata_ ).  The model focus, thus, on describing primarily the vegetative growth, with a simplified account of the reproductive phase, witho [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Plantain {
            get {
                return ResourceManager.GetString("Plantain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;Potato&quot;,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;Potato&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Memo, Models&quot;,
        ///      &quot;Text&quot;: &quot;\n# The APSIM Potato Model\n\n_Brown, H.E., Huth, N.I. and Holzworth, D.P._\n\n#Building the model.\nThe APSIM potato model has been described in part by [Brown_etal_2011] and developed using the Plant Modelling Framework (PMF) of [brown_plant_2014]. This new framework provides a library of plant organ and process subm [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Potato {
            get {
                return ResourceManager.GetString("Potato", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;parameters name=&quot;standard&quot; version=&quot;2.0&quot;&gt;
        ///  &lt;par name=&quot;editor&quot;&gt;Andrew Moore&lt;/par&gt;
        ///  &lt;par name=&quot;edited&quot;&gt;30 Jan 2013&lt;/par&gt;
        ///  &lt;par name=&quot;dairy&quot;&gt;false&lt;/par&gt;
        ///  &lt;par name=&quot;c-srs-&quot;&gt;1.2,1.4&lt;/par&gt;
        ///  &lt;par name=&quot;c-i-&quot;&gt;,1.7,,,,25.0,22.0,,,,,0.15,,0.002,0.5,1.0,0.01,20.0,3.0,1.5&lt;/par&gt;
        ///  &lt;par name=&quot;c-r-&quot;&gt;0.8,0.17,1.7,,0.6,,,,0.14,0.28,10.5,0.8,0.35,1.0,0.0,0.0,0.012,1.0,1.0,11.5&lt;/par&gt;
        ///  &lt;par name=&quot;c-k-&quot;&gt;0.5,0.02,0.85,0.7,0.4,0.02,0.6,0.133,0.95,0.84,0.8,0.7,0.035,0.33,0.12,0.043&lt;/par&gt;
        ///  &lt;par name=&quot;c-m-&quot;&gt;0.09,,0. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RUMINANT_PARAM_GLB {
            get {
                return ResourceManager.GetString("RUMINANT_PARAM_GLB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;SCRUM&quot;,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;SCRUM&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Memo, Models&quot;,
        ///      &quot;Text&quot;: &quot;\n# SCRUM: the Simple Crop Resource Uptake Model\n\n_Hamish Brown and Rob Zyskowski, Plant and Food Research, New Zealand_\n\nThis model has been built using the Plant Modelling Framework (PMF) of [brown_plant_2014] to simulate a range of different crops in simulations where water and nitrogen balance are of interest but [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SCRUM {
            get {
                return ResourceManager.GetString("SCRUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;Slurp&quot;,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;Slurp&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Memo, Models&quot;,
        ///      &quot;Text&quot;: &quot;\n# SLURP: the Sound of a crop using water\n\nThis model has been built using the Plant Modelling Framework (PMF) of [brown_plant_2014] to provide a simple representation of crops.  It is usefull for water and nitrogen balance studies where the focus is on soil processes and a very simple crop is adequate.  The model doe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Slurp {
            get {
                return ResourceManager.GetString("Slurp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name                              |R    DM    DMD    M/D     EE     CP     dg    ADIP     P        S       AA    MaxP Locales
        ///Alfalfa Hay Early-bloom           |Y  0.900  0.640   9.50  0.030  0.200  0.650  0.110  0.00250  0.00300  1.200  0.000 ca;us         es:&quot;Alfalfa Heno florac temprana&quot;
        ///Alfalfa Hay Full-bloom            |Y  0.900  0.610   9.00  0.030  0.170  0.650  0.160  0.00240  0.00300  1.200  0.000 ca;us         es:&quot;Alfalfa Heno plena floración&quot;
        ///Alfalfa Hay Mature                |Y  0.900  0.540  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Supplement {
            get {
                return ResourceManager.GetString("Supplement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.Surface.SurfaceOrganicMatter, Models&quot;,
        ///  &quot;InitialResidueName&quot;: null,
        ///  &quot;InitialResidueType&quot;: null,
        ///  &quot;InitialResidueMass&quot;: 0.0,
        ///  &quot;InitialStandingFraction&quot;: 0.0,
        ///  &quot;InitialCPR&quot;: 0.0,
        ///  &quot;InitialCNR&quot;: 0.0,
        ///  &quot;FractionFaecesAdded&quot;: 0.5,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;SurfaceOrganicMatter&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Surface.ResidueTypes, Models&quot;,
        ///      &quot;ResidueType&quot;: [
        ///        {
        ///          &quot;$type&quot;: &quot;Models.Surface.ResidueType, Models&quot;,
        ///          &quot;fom_t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SurfaceOrganicMatter {
            get {
                return ResourceManager.GetString("SurfaceOrganicMatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$type&quot;: &quot;Models.PMF.Plant, Models&quot;,
        ///  &quot;CropType&quot;: &quot;Wheat&quot;,
        ///  &quot;ResourceName&quot;: null,
        ///  &quot;Name&quot;: &quot;Wheat&quot;,
        ///  &quot;Children&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;Models.Memo, Models&quot;,
        ///      &quot;Text&quot;: &quot;\n# The APSIM Wheat Model\n\n_Brown, H.E., Huth, N.I. and Holzworth, D.P._\n\nThe APSIM wheat model has been developed using the Plant Modelling Framework (PMF) of [brown_plant_2014]. This new framework provides a library of plant organ and process submodels that can be coupled, at runtime, to construct a model in much t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Wheat {
            get {
                return ResourceManager.GetString("Wheat", resourceCulture);
            }
        }
    }
}
